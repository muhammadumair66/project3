{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgray\c0;}
\margl1440\margr1440\vieww25100\viewh14280\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 							 Computer Systems\
                                  Project 3\
                                 Spring 2020\
\
Write a C/C++ program that performs the tasks described below.\
\
If there is just 1 command-line argument and it is\
    -hw\
you should simply print\
    hello world\
and then exit(0).\
\
Use pthreads to examine a range of integers *inclusive*.  For each integer,\
compute its square root and then determine if the first digit after the\
decimal point is 7.  For example:\
    127.677  # would NOT be counted\
    123.766  # would be counted ****\
\
The program should accept 3 command-line arguments:\
    low value    (inclusive)\
    high value   (inclusive)\
    number of pthreads *to create* to perform the computation\
\
The mainline program should NOT participate in examining the range of\
integers.  Instead, it should create the required number of threads and\
wait for them to complete the computation.  It should then compute any\
final sum and print the results (see required format below).\
\
--------\
\
./p3  0  9000000000  2   ## sample run:  0 to 9 Billion (INCLUSIVE);  2 threads\
\
alarm(90);    // <---  **** make this the first executable line of your program\
\
cc -Ofast -o p3 p3.c -lm -lpthread    ## have the makefile use -Ofast\
\
long int      // use long ints in place of normal ints at all places in the code\
\
time1    // copy this function from the timedemo.c file to get the time\
\
sample output (required format) from the above run:\
    THREAD 0: 450006181\
    THREAD 1: 449997048\
    TOTAL 900003229\
    TIME 16.044873\
\
--------\
\
TURNIN info:\
    You should submit a tar file of a directory which contains all of the\
    required files (makefile, C source files, header files, etc).\
    Sample tar command to create a tar file from a dir:\
        tar cvf p3.tar ./p3dir  ## do *NOT* use full pathname of the dir\
    After un-tarring the project, I will cd to the dir containing it and type:\
        rm -rf p3\
        rm -f *.o\
        make\
    It should build an executable named p3.\
    Sample un-tar, build, and simple execution will be provided in a script\
    in p3testfiles/PREP.py which *must* execute correctly for the project to\
    be graded further.\
}